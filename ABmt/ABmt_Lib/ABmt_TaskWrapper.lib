' ========================================================================================
'
'	ABmt (Multi-Threaded ARMbasic): Task Wrapper Lib File
'
'
'	'  Revision History
'
'v 0.02		24Nov18	Initial Release
'	â€¢	ample comments/diatribe and code will eventually be descriptive of implementation
'
' TODO/FIXME: 	
'	-	Use preprocessor directives to expand this to handle both the 824 and 54102 (54102 currently)
' 	-	add checks here to ensure version compatibility between this and the Scheduler
'	-	lots of other stuff... :)
'
' ========================================================================================

'~~ // /* #ifndef ABmt_TaskWrapperLibVersion			' 'single Load' construct intentionally disabled...*/ 
#define ABmt_TaskWrapperLibVersion	"0.02"

#ifdef __CORIDIUM__	' danger will robinson, BT's BPP doesn't support non-boundary (intra-token) macro expansion
	#error ABmt is written to be used with the FilePP Preprocessor, to facilitate more robust compile-time functionality than what BT`s BPP can offer
#else	' with FilePP, intra-token macro expansion works, but path resolution behavior is different than BT's BPP
		// #warning ********** ABmt_TaskWrapper

	'the lack of a 'single-load' #ifndef construct here is intentional.
	'this #include is a wrapper for each task and is meant to be reloaded for every task that is #included for inclusion into the overall build.

	#ifdef ABmt_SchedulerCompile
		// This depends on use of FilePP with compile-time math features
		// this is where the math is bring done to increment a counter for each task that is being processed for inclusion,
		// to eventually yield a total count of the #indluded tasks
		#defplus _ABmt_TaskCount_buildup ,1
		
		// This depends on use of FilePP with word boundaries being turned off
		// This too depends on use of FilePP with compile-time math features
		// this is where the math is bring done for each task that is being processed for inclusion,
		// to yield the current task number fofr the task currently being processed
		#define ABmt_TaskID _ABmt_TaskCount_buildup )

		// too friggin bad that macros aren't expanded on #warning or #error constructs... 
		// FIXME fail - REGEX??? ...  #define _ABmt_compiletime_warning_task_count	#warning #comment Building ABmt Task #ABmt_TaskID: ABmt_TaskCode
		#warning ========================
		// FIXME fail - REGEX??? ...  _ABmt_compiletime_warning_task_count
		#warning      BUILDING TASK
		#warning ========================
		
		// This is the actual inclusion of the task's source code
		#include ABmt_TaskCode
		
		#else
			#error This lib is for use with ABmt and is intended to be included by the Scheduler 
	#endif

#endif

'~ // /* #endif	*/

