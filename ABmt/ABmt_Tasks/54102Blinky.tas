'ABT

#warning ********** This is ABT Blinky **********

#define ABT_54102_Blinky_LEDDwell	50
#define ABT_54102_Blinky_led_port	31
#define ABT_54102_Blinky_Cycles	20


function	ABT_FunctionA

	return 0
	endfunction

function	ABT_FunctionB

	return 0
	endfunction

function	ABT_FunctionC

	return 0
	endfunction
	

sub ABT_SubA


	endsub


sub ABT_SubB


	endsub

sub ABT_SubC


	endsub

main:
	dim ABT_led_dwell as integer
	dim ABT_i as integer
	
	' Func, Sub, Sub
	
	Print ABT_FunctionA
	gosub ABT_SubB
	ABT_SubC
	
	goto ABT_labelMid
	
ABT_labelUp:	
	goto ABT_RestartTask

ABT_labelMid:	

	'Func, Func, Sub
	ABT_i = ABT_FunctionB
	call ABT_FunctionC
	gosub ABT_SubA
	goto ABT_labelUp
	
ABT_RestartTask:	
	
	ABT_led_dwell = ABT_54102_Blinky_LEDDwell
	ABT_i = ABT_54102_Blinky_Cycles
	output(ABT_54102_Blinky_led_port)
	
	while ABT_i>0
		out(ABT_54102_Blinky_led_port) = ABT_i and 1
		print chr(if(ABT_i mod 2 = 0,"#","-"));	'~
		wait(ABT_54102_Blinky_LEDDwell) ' so it can be seen
		ABT_i -= 1
		loop
	print "Restarting Blinky"
	goto ABT_RestartTask
	
	end
