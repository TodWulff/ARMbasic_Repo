#ifndef ABRTOS_LOG_SUPPORT
#define ABRTOS_LOG_SUPPORT

#define ABRTOS_MOD		ABRTOS_LOG_MOD_LOG

#define	ABRTOS_LOG_INIT_STARTED				0
#define	ABRTOS_LOG_INIT_COMPLETED			1

#if 1	' THIS IS FOR DEBUG PURPOSES ONLY... 

#define ABRTOS_LOG_MOD_0		"CORE "
#define ABRTOS_LOG_MOD_1		"LOG  "
#define ABRTOS_LOG_MOD_2		"WDT  "
#define ABRTOS_LOG_MOD_3		"DEBUG"
#define ABRTOS_LOG_MOD_4		"STACK"
#define ABRTOS_LOG_MOD_5		"MUTEX"
#define ABRTOS_LOG_MOD_6		"MEM  "
#define ABRTOS_LOG_MOD_7		"MSGS "
#define ABRTOS_LOG_MOD_8		"SEMA "
#define ABRTOS_LOG_MOD_9		"SCHED"
#define ABRTOS_LOG_MOD_10		"TASKS"
#define ABRTOS_LOG_MOD_11		"EVENT"
#define ABRTOS_LOG_MOD_12		"INT  "
#define ABRTOS_LOG_MOD_13		"INIT "

#endif                                        

#if 1	' GLOBALS

DIM ABRTOS_LOG_CNT AS INTEGER

DIM ABRTOS_LOG_EVT(sub(ABRTOS_LOG_MAX_LOG_CNT,1)) AS INTEGER '*
DIM ABRTOS_LOG_MOD(sub(ABRTOS_LOG_MAX_LOG_CNT,1)) AS INTEGER '*
DIM ABRTOS_LOG_TIM(sub(ABRTOS_LOG_MAX_LOG_CNT,1)) AS INTEGER '*
DIM ABRTOS_LOG_ACTTASK(sub(ABRTOS_LOG_MAX_LOG_CNT,1)) AS INTEGER '*

DIM ABRTOS_LOG_LAST_EVT AS INTEGER
DIM ABRTOS_LOG_LAST_MOD AS INTEGER
DIM ABRTOS_LOG_LAST_TIM AS INTEGER
DIM ABRTOS_LOG_LAST_ACTTASK AS INTEGER

#endif

SUB ABRTOS_LOG_INIT

		
	' #if ABRTOS_OPTION_USE_LOGGING == 1
		' ABRTOS_LOG_EVENT(ABRTOS_MOD,ABRTOS_LOG_INIT_STARTED)
	' #endif
	
	ABRTOS_LOG_CNT = 0
	ABRTOS_LOG_LAST_EVT = -1
	ABRTOS_LOG_LAST_MOD = -1
	ABRTOS_LOG_LAST_TIM = -1
	ABRTOS_LOG_LAST_ACTTASK = -1
	
		
	' #if ABRTOS_OPTION_USE_LOGGING == 1
		' ABRTOS_LOG_EVENT(ABRTOS_MOD,ABRTOS_LOG_INIT_COMPLETED)
	' #endif

ENDSUB

SUB ABRTOS_LOG_EVENT(ABRTOS_MODULE, ABRTOS_LOG_EVNT)

	ABRTOS_LOG_LAST_MOD = ABRTOS_MODULE
	ABRTOS_LOG_LAST_EVT = ABRTOS_LOG_EVNT
	ABRTOS_LOG_LAST_TIM = TIMER
	ABRTOS_LOG_LAST_ACTTASK = ABRTOS_TASK_ACTIVEID
	VICSOFTINT = ABRTOS_LOG_TRIP_LOG_SWI							' ASSERT SWI

ENDSUB

SUB ABRTOS_LOG_ISR_HANDLER

	' THIS SUB IS CALLED FROM THE ABRTOS_INT_SWI_ISR
	' HENCE POINTERS ARE BEING USED AS THE ISUB HAS ISSUES WITH DIRECT REFERENCES...

	DIM ABRTOS_LOG_TEMP_STR(24) AS STRING
	DIM ABRTOS_LOG_COUNT AS INTEGER
	DIM ABRTOS_LOG_TEMP_POINTER AS INTEGER
	DIM ABRTOS_LOG_TEMP_OFFSET AS INTEGER
	DIM ABRTOS_LOG_TEMP AS INTEGER

	ABRTOS_LOG_TEMP_POINTER = ADDRESSOF ABRTOS_LOG_CNT	' GET VAR POINTER FOR ERROR_COUNT
	ABRTOS_LOG_COUNT = * ABRTOS_LOG_TEMP_POINTER	' GET VAL OF ERROR_COUNT

	ABRTOS_LOG_COUNT = ABRTOS_LOG_COUNT + 1					' INCREMENT THE VAL OF THE ERROR_COUNT AND STORE IT
	* ABRTOS_LOG_TEMP_POINTER = ABRTOS_LOG_COUNT
	
	' OK, THE FOLLOWING IS USED TO HAVE A ROUND-ROBIN TYPE OF LOG POOL - IT STARTS OUT AT BASE+0 AND FILLS UP AN THEN STARTS
	' BACK AT BASE+0 AGAIN AND CONTINUES TO LOOP.  THAT WAY THE LATEST X LOG EVENTS ARE ALWAYS RETAINED IN THE BUFFER IN SOME
	' ORDER, THE STARTING POINT GETS BUMPED UP EVERY ITERATION, WHICH CAN BE PROGRAMATICALLY FIGURED OUT VIA THE COUNT...
	ABRTOS_LOG_TEMP_OFFSET = (((ABRTOS_LOG_COUNT-1) MOD ABRTOS_LOG_MAX_LOG_CNT) * 4)
	
	ABRTOS_LOG_TEMP_POINTER = ADDRESSOF ABRTOS_LOG_MOD + ABRTOS_LOG_TEMP_OFFSET
	* ABRTOS_LOG_TEMP_POINTER = * (ADDRESSOF ABRTOS_LOG_LAST_MOD)

	ABRTOS_LOG_TEMP_POINTER = ADDRESSOF ABRTOS_LOG_EVT + ABRTOS_LOG_TEMP_OFFSET
	* ABRTOS_LOG_TEMP_POINTER = * (ADDRESSOF ABRTOS_LOG_LAST_EVT)
	
	ABRTOS_LOG_TEMP_POINTER = ADDRESSOF ABRTOS_LOG_TIM + ABRTOS_LOG_TEMP_OFFSET
	* ABRTOS_LOG_TEMP_POINTER = * (ADDRESSOF ABRTOS_LOG_LAST_TIM)
	
	ABRTOS_LOG_TEMP_POINTER = ADDRESSOF ABRTOS_LOG_ACTTASK + ABRTOS_LOG_TEMP_OFFSET
	* ABRTOS_LOG_TEMP_POINTER = * (ADDRESSOF ABRTOS_LOG_LAST_ACTTASK)
	
#if 1		' THIS IS FOR DEBUG PURPOSES ONLY...
	' ABRTOS_LOG_TEMP_POINTER = * ADDRESSOF ABRTOS_LOG_LAST_MOD
	PRINT "EVENT #: ";ABRTOS_LOG_COUNT," LOGGED @ TIME: ";
	ABRTOS_LOG_TEMP_POINTER = * (ADDRESSOF ABRTOS_LOG_LAST_TIM)
	ABRTOS_LOG_TEMP_STR = "00000000000" & STR(ABRTOS_LOG_TEMP_POINTER)
	PRINT RIGHT(ABRTOS_LOG_TEMP_STR,10),
	
	PRINT "ACTIVE TASK ID: ";
	ABRTOS_LOG_TEMP_POINTER = * (ADDRESSOF ABRTOS_LOG_LAST_ACTTASK)
	ABRTOS_LOG_TEMP_STR = "0" & STR(ABRTOS_LOG_TEMP_POINTER)
	PRINT RIGHT(ABRTOS_LOG_TEMP_STR,2),
	
	ABRTOS_LOG_TEMP_POINTER = * (ADDRESSOF ABRTOS_LOG_LAST_MOD)
	
	PRINT "MODULE: ";
	ABRTOS_LOG_TEMP = * (ADDRESSOF ABRTOS_LOG_LAST_EVT)
	ABRTOS_LOG_TEMP_STR = "0" & HEX(ABRTOS_LOG_TEMP)
	ABRTOS_LOG_TEMP_STR = RIGHT(ABRTOS_LOG_TEMP_STR,2)
	
	SELECT ABRTOS_LOG_TEMP_POINTER
		CASE 0
			PRINT ABRTOS_LOG_MOD_0,
			SELECT ABRTOS_LOG_TEMP
				CASE ELSE
					PRINT "UN-DEFINED EVENT: $",ABRTOS_LOG_TEMP_STR
			ENDSELECT
		CASE 1
			PRINT ABRTOS_LOG_MOD_1,
			SELECT ABRTOS_LOG_TEMP
				CASE ELSE
					PRINT "UN-DEFINED EVENT: $",ABRTOS_LOG_TEMP_STR
			ENDSELECT
		CASE 2
			PRINT ABRTOS_LOG_MOD_2,
			SELECT ABRTOS_LOG_TEMP
				CASE 0
					PRINT "ABRTOS_WDT_SETUP_STARTED"
				CASE 1
					PRINT "ABRTOS_WDT_SETUP_COMPLETED"
				CASE 2
					PRINT "ABRTOS_WDT_RESET_START"
				CASE 3
					PRINT "ABRTOS_WDT_RESET_FINISH"
				CASE 4
					PRINT "ABRTOS_WDT_STARTUP_CHECK_START"
				CASE 5
					PRINT "ABRTOS_WDT_STARTUP_CHECK_FINISH"
				CASE 6
					PRINT "ABRTOS_WDT_START_START"
				CASE 7
					PRINT "ABRTOS_WDT_START_FINISH"
				CASE 8
					PRINT "ABRTOS_WDT_FEED_START"
				CASE 9
					PRINT "ABRTOS_WDT_FEED_FINISH"
				CASE 10
					PRINT "ABRTOS_WDT_SET_MODE_START"
				CASE 11
					PRINT "ABRTOS_WDT_SET_MODE_FINISH"
				CASE 12
					PRINT "ABRTOS_WDT_THE_DOG_WAS_FED"
				CASE ELSE
					PRINT "UN-DEFINED EVENT: $",ABRTOS_LOG_TEMP_STR
			ENDSELECT
		CASE 3
			PRINT ABRTOS_LOG_MOD_3,
			SELECT ABRTOS_LOG_TEMP
				' CASE 0
					' PRINT ""
				' CASE 1
					' PRINT ""
				CASE ELSE
					PRINT "UN-DEFINED EVENT: $",ABRTOS_LOG_TEMP_STR
			ENDSELECT
		CASE 4
			PRINT ABRTOS_LOG_MOD_4,
			SELECT ABRTOS_LOG_TEMP
				' CASE 0
					' PRINT ""
				' CASE 1
					' PRINT ""
				CASE ELSE
					PRINT "UN-DEFINED EVENT: $",ABRTOS_LOG_TEMP_STR
			ENDSELECT
		CASE 5
			PRINT ABRTOS_LOG_MOD_5,
			SELECT ABRTOS_LOG_TEMP
				' CASE 0
					' PRINT ""
				' CASE 1
					' PRINT ""
				CASE ELSE
					PRINT "UN-DEFINED EVENT: $",ABRTOS_LOG_TEMP_STR
			ENDSELECT
		CASE 6
			PRINT ABRTOS_LOG_MOD_6,
			SELECT ABRTOS_LOG_TEMP
				' CASE 0
					' PRINT ""
				' CASE 1
					' PRINT ""
				CASE ELSE
					PRINT "UN-DEFINED EVENT: $",ABRTOS_LOG_TEMP_STR
			ENDSELECT
		CASE 7
			PRINT ABRTOS_LOG_MOD_7,
			SELECT ABRTOS_LOG_TEMP
				' CASE 0
					' PRINT ""
				' CASE 1
					' PRINT ""
				CASE ELSE
					PRINT "UN-DEFINED EVENT: $",ABRTOS_LOG_TEMP_STR
			ENDSELECT
		CASE 8
			PRINT ABRTOS_LOG_MOD_8,
			SELECT ABRTOS_LOG_TEMP
				CASE 0
					PRINT "ABRTOS_SEMA_SETUP_STARTED"
				CASE 1
					PRINT "ABRTOS_SEMA_SETUP_COMPLETE"
				CASE 2
					PRINT "ABRTOS_SEMA_INITSEMA_STARTED"
				CASE 3
					PRINT "ABRTOS_SEMA_INITSEMA_SEMAINITOK"
				CASE 4
					PRINT "ABRTOS_SEMA_INITSEMA_SEMAINITERR"
				CASE 5
					PRINT "ABRTOS_SEMA_INITSEMA_SEMANUMOOR"
				CASE 6
					PRINT "ABRTOS_SEMA_INITSEMA_COMPLETE"
				CASE 7
					PRINT "ABRTOS_SEMA_XGET_SEMA_STARTED"
				CASE 8
					PRINT "ABRTOS_SEMA_XGET_OK_DECREMENTED"
				CASE 9
					PRINT "ABRTOS_SEMA_XGET_BUSY_WAIT"
				CASE 10
					PRINT "ABRTOS_SEMA_XGET_UNINITIALIZED"
				CASE 11
					PRINT "ABRTOS_SEMA_XGET_SEMANUMOOR"
				CASE 12
					PRINT "ABRTOS_SEMA_XGET_SEMA_COMPLETED"
				CASE 13
					PRINT "ABRTOS_SEMA_GET_SEMA_STARTED"
				CASE 14
					PRINT "ABRTOS_SEMA_GET_OK"
				CASE 15
					PRINT "ABRTOS_SEMA_GET_BUSY_WAIT"
				CASE 16
					PRINT "ABRTOS_SEMA_GET_SEMANUMOOR"
				CASE 17
					PRINT "ABRTOS_SEMA_GET_SEMA_UNINITD"
				CASE 18
					PRINT "ABRTOS_SEMA_GET_SEMA_COMPLETED"
				CASE 19
					PRINT "ABRTOS_SEMA_INITSEMA_BADPRAMS"
				CASE ELSE
					PRINT "UN-DEFINED EVENT: $",ABRTOS_LOG_TEMP_STR
			ENDSELECT
		CASE 9
			PRINT ABRTOS_LOG_MOD_9,
			SELECT ABRTOS_LOG_TEMP
				CASE 0
					PRINT "ABRTOS_SCHED_ITERATE_START"
				CASE 1
					PRINT "ABRTOS_SCHED_ITERATE_FINISH"
				CASE 2
					PRINT "ABRTOS_SCHED_START_START"
				CASE 3
					PRINT "ABRTOS_SCHED_START_FINISH"
				CASE 4
					PRINT "ABRTOS_SCHED_STOP_START"
				CASE 5
					PRINT "ABRTOS_SCHED_STOP_FINISH"
				CASE 6
					PRINT "ABRTOS_SCHED_ITERATED"
				CASE ELSE
					PRINT "UN-DEFINED EVENT: $",ABRTOS_LOG_TEMP_STR
			ENDSELECT
		CASE 10
			PRINT ABRTOS_LOG_MOD_10,
			SELECT ABRTOS_LOG_TEMP
				CASE 0
					PRINT "ABRTOS_TASK_INIT_STARTED"
				CASE 1
					PRINT "ABRTOS_TASK_INIT_COMPLETED"
				CASE 2
					PRINT "ABRTOS_TASK_CURRENT_SUSPEND_STARTED"
				CASE 3
					PRINT "ABRTOS_TASK_CURRENT_SUSPEND_COMPLETED"
				CASE 4
					PRINT "ABRTOS_TASK_CURRENT_WAITSEMA_STARTED"
				CASE 5
					PRINT "ABRTOS_TASK_CURRENT_WAITSEMA_COMPLETED"
				CASE 6
					PRINT "ABRTOS_TASK_CURRENT_KILL_STARTED"
				CASE 7
					PRINT "ABRTOS_TASK_CURRENT_KILL_COMPLETED"
				CASE ELSE
					PRINT "UN-DEFINED EVENT: $",ABRTOS_LOG_TEMP_STR
			ENDSELECT
		CASE 11
			PRINT ABRTOS_LOG_MOD_11,
			SELECT ABRTOS_LOG_TEMP
				' CASE 0
					' PRINT ""
				' CASE 1
					' PRINT ""
				CASE ELSE
					PRINT "UN-DEFINED EVENT: $",ABRTOS_LOG_TEMP_STR
			ENDSELECT
		CASE 12
			PRINT ABRTOS_LOG_MOD_12,
			SELECT ABRTOS_LOG_TEMP
				CASE 0
					PRINT "ABRTOS_INT_SWI_SETUP_STARTED"
				CASE 1
					PRINT "ABRTOS_INT_SWI_SETUP_COMPLETE"
				CASE ELSE
					PRINT "UN-DEFINED EVENT: $",ABRTOS_LOG_TEMP_STR
			ENDSELECT
		CASE 13
			PRINT ABRTOS_LOG_MOD_13,
			SELECT ABRTOS_LOG_TEMP
				CASE 0
					PRINT "ABRTOS_INIT_STARTUP_STARTED"
				CASE 1
					PRINT "ABRTOS_INIT_STARTUP_COMPLETE"
				CASE ELSE
					PRINT "UN-DEFINED EVENT: $",ABRTOS_LOG_TEMP_STR
			ENDSELECT
		CASE ELSE
			PRINT "UM, UNKNOWN MODULE",
	ENDSELECT	

#endif
	
#if 0		' ENABLE THIS TO CLEAR THE LAST ERROR 
	ABRTOS_LOG_TEMP_POINTER = (ADDRESSOF ABRTOS_LOG_LAST_MOD)
	* ABRTOS_LOG_TEMP_POINTER = 0
	ABRTOS_LOG_TEMP_POINTER = (ADDRESSOF ABRTOS_LOG_LAST_EVT)
	* ABRTOS_LOG_TEMP_POINTER = 0
	ABRTOS_LOG_TEMP_POINTER = (ADDRESSOF ABRTOS_LOG_LAST_TIM)
	* ABRTOS_LOG_TEMP_POINTER = 0
	ABRTOS_LOG_TEMP_POINTER = (ADDRESSOF ABRTOS_LOG_LAST_ACTTASK)
	* ABRTOS_LOG_TEMP_POINTER = 0
#endif
	
ENDSUB

#endif
