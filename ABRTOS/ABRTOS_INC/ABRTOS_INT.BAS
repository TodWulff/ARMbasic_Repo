#ifndef ABRTOS_INT_SUPPORT
#define ABRTOS_INT_SUPPORT

#define ABRTOS_MOD		ABRTOS_LOG_MOD_INT

#define ABRTOS_INT_SWI_SETUP_STARTED	0
#define ABRTOS_INT_SWI_SETUP_COMPLETE	1

' GLOBAL
DIM ABRTOS_INT_ENA_CACHE AS INTEGER

SUB	ABRTOS_INT_DISABLE

	ABRTOS_INT_ENA_CACHE = VICINTENABLE	' STORE THOSE INTS THAT ARE CURRENTLY ENABLED
	VICINTENCLR = $FFFFFFFF			' AND FORCEABLY DISABLE ALL INTERRUPTS

ENDSUB

SUB	ABRTOS_INT_ENABLE

	VICINTENABLE = ABRTOS_INT_ENA_CACHE	' ENABLE THE APPROPRIATE INTERRUPTS

ENDSUB

INTERRUPT SUB ABRTOS_INT_SWI_ISR
' SUB ABRTOS_INT_SWI_ISR

	' ASM ($E3E00000)		'	MVN r0, 0x0			SET R0 TO $FFFFFFFF
	' ASM ($E3A010FF)		'   MOV R1, 0xFF		GET $EC INTO R1
	' ASM ($E3A02013)		'   MOV R2, 0x13
	' ASM ($E0411002)		'   SUB R1, R1, R2
	' ASM ($E3A02010)		'   MOV R2, 0x10		R2 = 16
	' ASM ($E0010192)		'   MUL R1, R2, R1		R1 << 4 = $EC0
	' ASM ($E3A02003)		'   MOV R2, 0x3			
	' ASM ($E0811002)		'   ADD R1, R1, R2		R1 = $EC3
	' ASM ($E0400001)		'   SUB R0, R0, R1		R0 = $FFFFF13C = VICVECTADDR15 (TEMP REG)
	' ASM ($E5905000)		'   LDR R5, [R0]		R5 GETS RESTORED FROM DATA AT VVA15



	' PERFORM JUMPS BASED ON SWI'S TOSSED.
	' RIGHT NOW JUST LOG BS
	#if ABRTOS_OPTION_USE_LOGGING == 1
		ABRTOS_LOG_ISR_HANDLER
	#endif
	
	' BOTH OF THESE STEPS REQUIRED
	VICSOFTINTCLR = $2	' DEASSERT SWI - IF NOT CLEARED, WILL CONTINOUSLY FIRE
	VICVECTADDR = 0		' ACKNOWLEDGE THE INTERRUPT - IF NOT ACKNOWLEDGED, WILL NOT FIRE AGAIN...

ENDSUB

SUB	ABRTOS_INT_SWI_SETUP

		
	#if ABRTOS_OPTION_USE_LOGGING == 1
		ABRTOS_LOG_EVENT(ABRTOS_MOD,ABRTOS_INT_SWI_SETUP_STARTED)
	#endif
	
	ABRTOS_INT_DISABLE
	
	#if ABRTOS_OPTION_USE_LOGGING == 1
		VICVECTADDR2 = ADDRESSOF ABRTOS_INT_SWI_ISR			' PUT THE ADDY OF THE ISR IN THE SWI VECTOR ADDR SLOT #2
		VICVECTCNTL2 = $21									' ENABLE SLOT 2 AND ASSOCIATE IT WITH INT1 (SWI)
		ABRTOS_INT_ENA_CACHE = ABRTOS_INT_ENA_CACHE OR 2	' ADD THE SWI_INT TO THE INT_ENA_CACHE
	#endif
	
	ABRTOS_INT_ENABLE
	
		
	#if ABRTOS_OPTION_USE_LOGGING == 1
		ABRTOS_LOG_EVENT(ABRTOS_MOD,ABRTOS_INT_SWI_SETUP_COMPLETE)
	#endif
	
ENDSUB

SUB ABRTOS_INT_TEST_ISR





ENDSUB

SUB	ABRTOS_INT_SWI2_SETUP

		
	' #if ABRTOS_OPTION_USE_LOGGING == 1
		' ABRTOS_LOG_EVENT(ABRTOS_MOD,ABRTOS_INT_SWI_SETUP_STARTED)
	' #endif
	
	ABRTOS_INT_DISABLE
	
	VICVECTADDR2 = ADDRESSOF ABRTOS_INT_TEST_ISR		' PUT THE ADDY OF THE ISR IN THE SWI VECTOR ADDR SLOT #2
	VICVECTCNTL2 = $21									' ENABLE SLOT 2 AND ASSOCIATE IT WITH INT1 (SWI)
	ABRTOS_INT_ENA_CACHE = ABRTOS_INT_ENA_CACHE OR 2	' ADD THE SWI_INT TO THE INT_ENA_CACHE

	ABRTOS_INT_ENABLE
	
		
	' #if ABRTOS_OPTION_USE_LOGGING == 1
		' ABRTOS_LOG_EVENT(ABRTOS_MOD,ABRTOS_INT_SWI_SETUP_COMPLETE)
	' #endif
	
ENDSUB


#endif
